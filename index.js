/**
 * Module Imports
 */

const { Client, Collection, DiscordAPIError } = require("discord.js");
const MessageEmbed = require('discord.js');
const { readdirSync } = require("fs");
const { join } = require("path");
const { TOKEN, PREFIX } = require("./util/EvobotUtil");
const i18n = require("i18n");
let maincolor = '#884bb5'
let prefix = '>'
// let greenpieceId = '383887543986552833'
let greenpieceId = '429387453586079752'

const client = new Client({
  disableMentions: "everyone",
  restTimeOffset: 0
});

client.login(TOKEN);
client.commands = new Collection();
client.prefix = PREFIX;
client.queue = new Map();
const cooldowns = new Collection();
const escapeRegex = (str) => str.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");

i18n.configure({
  locales: ["ar", "de", "en", "es", "fr", "it", "ko", "nl", "pl", "pt_br", "ru", "sv", "th", "tr", "vi", "zh_cn", "zh_sg", "zh_tw"],
  directory: join(__dirname, "locales"),
  defaultLocale: "ru",
  retryInDefaultLocale: true,
  objectNotation: true,
  register: global,

  logWarnFn: function (msg) {
    console.log("warn", msg);
  },

  logErrorFn: function (msg) {
    console.log("error", msg);
  },

  missingKeyFn: function (locale, value) {
    return value;
  },

  mustacheConfig: {
    tags: ["{{", "}}"],
    disable: false
  }
});

/**
 * Client Events
 */

client.on("warn", (info) => console.log(info));
client.on("error", console.error);
client.on("ready", () => {
  console.log('Bot enabled!')
})


/**
 * Import all commands
 */
const commandFiles = readdirSync(join(__dirname, "commands")).filter((file) => file.endsWith(".js"));
for (const file of commandFiles) {
  const command = require(join(__dirname, "commands", `${file}`));
  client.commands.set(command.name, command);
}

client.on("message", async (message) => {
  if (message.author.bot) return;
  if (!message.guild) return;

  const prefixRegex = new RegExp(`^(<@!?${client.user.id}>|${escapeRegex(PREFIX)})\\s*`);
  if (!prefixRegex.test(message.content)) return;

  const [, matchedPrefix] = message.content.match(prefixRegex);

  const args = message.content.slice(matchedPrefix.length).trim().split(/ +/);
  const commandName = args.shift().toLowerCase();

  const command =
    client.commands.get(commandName) ||
    client.commands.find((cmd) => cmd.aliases && cmd.aliases.includes(commandName));

  if (!command) return;

  if (!cooldowns.has(command.name)) {
    cooldowns.set(command.name, new Collection());
  }

  const now = Date.now();
  const timestamps = cooldowns.get(command.name);
  const cooldownAmount = (command.cooldown || 1) * 1000;

  if (timestamps.has(message.author.id)) {
    const expirationTime = timestamps.get(message.author.id) + cooldownAmount;

    if (now < expirationTime) {
      const timeLeft = (expirationTime - now) / 1000;
      return message.reply(
        i18n.__mf("common.cooldownMessage", { time: timeLeft.toFixed(1), name: command.name })
      );
    }
  }

  timestamps.set(message.author.id, now);
  setTimeout(() => timestamps.delete(message.author.id), cooldownAmount);

  try {
    command.execute(message, args);
  } catch (error) {
    console.error(error);
    message.reply(i18n.__("common.errorCommand")).catch(console.error);
  }
});

client.on('message', message => { // –ø–∞—Å—Ö–∞–ª–∫–∞ —ã—ã
  if (message.content === '–±–æ—Ç —Ö—É–π–Ω—è') {
    message.channel.send({files: ["./images/neponyal.jpg"]})
  }
});

client.on('message', message => { // –ø–∞—Å—Ö–∞–ª–∫–∞ —ã—ã
  if (message.content === '–ë–æ—Ç —Ö—É–π–Ω—è') {
    message.channel.send({files: ["./images/neponyal.jpg"]})
  }
});

client.on('message', message => {
  if(message.content === '–î–∞–π —Ñ—Ä–µ—Ç–æ—á–∫—É') {
      message.channel.send('–î–µ—Ä–∂–∏ —Ñ—Ä–µ—Ç–æ—á–∫—É', { files: ["./images/test.jpg"] })
  }
});

client.on('message', message => {
  if(message.content === '–£–∫—Ä–∞–∏–Ω–∞') {
      message.channel.send('–£–∫—Ä–∞–∏–Ω–∞ —ç—Ç–æ –≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º –∂–∏–≤—É—Ç —Ä–∞–±—ã –≥–∏—Ç–ª–µ—Ä–∞ –¥–∞–∂–µ –ø–æ—Ö—É–π —á—Ç–æ –æ–Ω –Ω–µ–º–µ—Ü, —Ö–æ—Ç—è –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ, –¥–∞–ª–µ–µ –æ–Ω–∏ –≤—Å–µ –ø–∏–∑–¥–µ–ª–µ –≤ —Ç—Ç, –≤ –ª–∫, —Ç–≥, –≤–∫, –∏ –ø—Ä–æ—á–∏—Ö —Å–æ—Ü —Å–µ—Ç—è—Ö —á—Ç–æ –†–æ—Å—Å–∏—è –ø–æ—Å–æ—Å–µ—Ç —É –£–∫—Ä–∞–∏–Ω—ã, –≤ –∏—Ç–æ–≥–µ –Ω–∏—Ö—É—è ,–µ—Å–ª–∏ –Ω–∞—á–Ω–µ—Ç—Å—è –≤–æ–π–Ω–∞. —Ç–æ –±—É–¥–µ—Ç –ø–∏–∑–¥–∞ –£–∫—Ä–∞–∏–Ω–µ –≤ –†–æ—Å—Å–∏–∏ –ø–æ—Ç–æ–º—É —á—Ç–æ –±–æ–ª–µ–µ —É–º–Ω—ã–µ –ª—é–¥–∏ –∂–∏–≤—É—Ç', { files: ["./images/ukraine.jpg"] })
  }
});

client.on('message', message => {
  if(message.content === '–£–∫—Ä–∞–∏–Ω–∞') {
      message.react('üá©üá™')
  }
});

client.on('message', message => {
  if(message.content === '–ì–Ω–∏–ª—å, —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ') {
      message.reply('–ú–µ–Ω—è –∑–æ–≤—É—Ç –í–∏—Ç–∞–ª—è –∏ —è –Ω–∞ –≥–æ–ª–æ–≤—É –µ–±–Ω—É—Ç—ã–π –¥–æ–ª–±–∞–µ–±. –ú–æ—è –º–∞—Ç—å —Ö–æ—Ç–µ–ª–∞ –º–µ–Ω—è —É–±–∏—Ç—å –∏ –∫–æ–≥–¥–∞ –º–µ–Ω—è –Ω–µ—Å–ª–∏ —Å –∞–±–æ—Ä—Ç–∞ –≤ –ø–∞–∫–µ—Ç–µ –∏–∑ –∞—à–∞–Ω–∞, –º–µ–Ω—è –ø–∏–Ω–∞–ª–∏ –≤ —ç—Ç–æ–º –ø–∞–∫–µ—Ç–µ –∫–∞–∫ –ø–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏ –ø–∏–Ω–∞—é—Ç —Å–º–µ–Ω–∫—É. –ù–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –¥–ª—è –æ–±—â–µ—Å—Ç–≤–∞, —è –≤—ã–∂–∏–ª –∏ —Ç–µ–ø–µ—Ä—å –æ—Ç—Ä–∞–≤–ª—è—é –∂–∏–∑–Ω—å –¥—Ä—É–≥–∏–º –ª—é–¥—è–º, –Ω–µ—Å—è —Ö—É–π–Ω—é. –í –¥–µ—Ç—Å—Ç–≤–µ —è –∫–∏–¥–∞–ª –∫–∞–º–Ω–∏ –≤ –º–∞—à–∏–Ω—ã, –∏ —Å—ä–µ–±—ã–≤–∞–ª –Ω–∞ –∑–∞–±—Ä–æ—à–∫–∏ –≤ –ø–æ–¥–≤–∞–ª. –Ø –µ–±–∞–Ω–∞—è –≤–∞—Ç–∞, —Å–º–æ—Ç—Ä—é –ö–∏—Å–∏–ª–µ–≤–∞ –∏ —Å—á–∏—Ç–∞—é –£–∫—Ä–∞–∏–Ω—É –≥–æ—Ä–æ–¥–æ–º, –∞ —Ç–∞–∫-–∂–µ —Ö–æ—á—É —Å–ª–æ–º–∞—Ç—å –µ–±–∞–ª–æ –†–∏—á–∞—Ä–¥—É, –î–º–∏—Ç—Ä–∏—é–ì –∏ –ì—Ä–∏–Ω–ü–∏—Å—É228 –∑–∞ —Ç–æ, —á—Ç–æ —è –Ω–µ –≤—ã–∫—É–ø–∞—é —Ä–æ—Ñ–ª–æ–≤. –ß–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–±—å–µ—Ç –∏–º –µ–±–∞–ª–æ —è –∑–∞–∫–∞–∂—É –ø–∏—Ü—Ü—É –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –æ—Ç—Ä–∞–±–æ—Ç–∞—é —Å–º–µ–Ω—É. –ê –µ—â–µ –º–æ–π –Ω–∏–∫ –≤ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ —Ç—Ä–æ—Ñ—Ñ–∏123, —è –Ω–µ–¥–æ—Å–∫–∞–º–µ—Ä –∏ —è —É–∑–Ω–∞–ª, —á—Ç–æ –î–µ–Ω–∏—Å –∏–∑ –ú–æ—Å–∫–≤—ã, –∞ —Ç–∞–∫-–∂–µ —Å–ª–∏–ª —Ñ–æ—Ç–∫–∏ –µ–≥–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É–µ—â–µ–≥–æ –±—Ä–∞—Ç–∞. –Ø –æ—Ç–ø—Ä–∞–≤–ª—è—é –∫–∞—Ä—Ç–∏–Ω–∫—É —Å ip-–ª–æ–≥–≥–µ—Ä—Ä–æ–º –¥—É–º–∞—è, —á—Ç–æ –Ω–∞ —ç—Ç–æ –∫—Ç–æ-–ª–∏–±–æ –ø–æ–≤–µ–¥–µ—Ç—Å—è. –Ø –∏—Å–∫—Ä–µ–Ω–Ω–µ –Ω–µ –ø–æ–Ω–∏–º–∞—é –±—Ä–µ–Ω–Ω–æ—Å—Ç—å —Å–≤–æ–µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è. –ê –µ—â–µ –º–æ–π –¥—Ä—É–≥ —ç—Ç–æ iznaf30', { files: ["./images/krym.jpg"] });
  }
})

client.on('ready', () => { // Activity  Test Mode ‚ö†Ô∏è  Updating...
  client.user.setActivity('>help')
});

client.on('message', (message) => {
  if(message.content === '–¢—Ä–æ—Ñ—Ñ–∏ –∫—Ç–æ?') {
      message.channel.send('–ì–µ–π')
  }
});

client.on('message', message => {
  if(message.content === '–ì–µ–π') {
      message.react('üè≥Ô∏è‚Äçüåà')
  }
});

client.on('message', message => {    // &yn (randomaizer)
  if (message.content.startsWith(prefix + 'yn')) {
      var flip = [":regional_indicator_y: :regional_indicator_e: :regional_indicator_s:",
                  ":regional_indicator_n: :regional_indicator_o:"]
              var temp = flip[Math.floor(Math.random() * 2)]
message.channel.send(temp)
    }
});

client.on('message', message => {    // &yn (randomaizer)
  if (message.content === 'https://tenor.com/view/kot%D0%BA%D0%BE%D1%82-cat-headphones-head-bop-music-gif-17448544') {
      var flip = ["–∑—Ä–∏—Ç–µ–ª—è–º –Ω–µ –ø–æ—Ö—É–π",
                  "–∑—Ä–∏—Ç–µ–ª—è–º –Ω–µ –ø–æ—Ö—É–π",
                  "–ø–æ—à–µ–ª –Ω–∞—Ö—É–π, –∑–∞–µ–±–∞–ª —É–∂–µ"]
              var temp = flip[Math.floor(Math.random() * 3)]
message.channel.send(temp)
    }
});

client.on('message', message => {
  if(message.content === '—Ç—Ä–æ—Ñ—Ñ–∏ –ø–æ—à–µ–ª –Ω–∞—Ö—É–π') {
    message.channel.send('–¢—ã', {files: ["./images/serega-pirat-dota2.gif"]})
  }
});

client.on('message', message => {
  if(message.content === '–°—É–ø') {
    message.channel.send('—Å–∞–ª–∞—Ç. https://youtu.be/b4UdVHRXpsc');
    message.react('üçú');
    message.react('ü•ó')
  }
});

client.on('message', message => {
  if(message.content.includes('–Ω–µ–≥—Ä—ã') && message.author.id === greenpieceId) {
    message.reply('–∞–∞–∞–∞ —ã—ã—ã—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã');
    message.reply('—ã—ã—ã—ã –∞–∞–∞ —Ç—É–ø—ã–µ –Ω–µ–≥—Ä—ã');
    message.reply('—É–±–∏—Ç—å –Ω–µ–≥—Ä–æ–≤');
    message.reply('—É—ã—É—ã—ã—ã—ã—ã –Ω–µ–≥—Ä—ã —Å—É–∫–∞–∞–∞')
  }
});

client.on('message', message => {
  if(message.content.includes('–ù–µ–≥—Ä—ã') && message.author.id === greenpieceId) {
    message.reply('–∞–∞–∞–∞ —ã—ã—ã—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã');
    message.reply('—ã—ã—ã—ã –∞–∞–∞ —Ç—É–ø—ã–µ –Ω–µ–≥—Ä—ã');
    message.reply('—É–±–∏—Ç—å –Ω–µ–≥—Ä–æ–≤');
    message.reply('—É—ã—É—ã—ã—ã—ã—ã –Ω–µ–≥—Ä—ã —Å—É–∫–∞–∞–∞')
  }
});

client.on('message', message => {
  if(message.content.includes('Niggers') && message.author.id === greenpieceId) {
    message.reply('–∞–∞–∞–∞ —ã—ã—ã—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã');
    message.reply('—ã—ã—ã—ã –∞–∞–∞ —Ç—É–ø—ã–µ –Ω–µ–≥—Ä—ã');
    message.reply('—É–±–∏—Ç—å –Ω–µ–≥—Ä–æ–≤');
    message.reply('—É—ã—É—ã—ã—ã—ã—ã –Ω–µ–≥—Ä—ã —Å—É–∫–∞–∞–∞')
  }
});

client.on('message', message => {
  if(message.content.includes('niggers') && message.author.id === greenpieceId) {
    message.reply('–∞–∞–∞–∞ —ã—ã—ã—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã');
    message.reply('—ã—ã—ã—ã –∞–∞–∞ —Ç—É–ø—ã–µ –Ω–µ–≥—Ä—ã');
    message.reply('—É–±–∏—Ç—å –Ω–µ–≥—Ä–æ–≤');
    message.reply('—É—ã—É—ã—ã—ã—ã—ã –Ω–µ–≥—Ä—ã —Å—É–∫–∞–∞–∞')
  }
});

client.on('message', message => {
  if(message.content.includes('–Ω–µ–≥—Ä–∏—Ç—è—Ç–∞') && message.author.id === greenpieceId) {
    message.reply('–∞–∞–∞–∞ —ã—ã—ã—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã');
    message.reply('—ã—ã—ã—ã –∞–∞–∞ —Ç—É–ø—ã–µ –Ω–µ–≥—Ä—ã');
    message.reply('—É–±–∏—Ç—å –Ω–µ–≥—Ä–æ–≤');
    message.reply('—É—ã—É—ã—ã—ã—ã—ã –Ω–µ–≥—Ä—ã —Å—É–∫–∞–∞–∞')
  }
});

client.on('message', message => {
  if(message.content.includes('–ù–µ–≥—Ä–∏—Ç—è—Ç–∞') && message.author.id === greenpieceId) {
    message.reply('–∞–∞–∞–∞ —ã—ã—ã—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã –Ω–µ–≥—Ä—ã');
    message.reply('—ã—ã—ã—ã –∞–∞–∞ —Ç—É–ø—ã–µ –Ω–µ–≥—Ä—ã');
    message.reply('—É–±–∏—Ç—å –Ω–µ–≥—Ä–æ–≤');
    message.reply('—É—ã—É—ã—ã—ã—ã—ã –Ω–µ–≥—Ä—ã —Å—É–∫–∞–∞–∞')
  }
});

client.on('message', message => {
  if(message.content.includes('–ø—Ä–æ–≤–µ—Ä–∫–∞')) {
    message.reply('–Ø –Ω–∞—à–µ–ª!')
  }
});